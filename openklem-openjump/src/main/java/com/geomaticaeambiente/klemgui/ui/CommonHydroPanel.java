package com.geomaticaeambiente.klemgui.ui;

import it.geomaticaeambiente.klem.TimeInterval;

import java.awt.GridBagConstraints;
import java.awt.Insets;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;

import com.geomaticaeambiente.klemgui.plugin.hydrology.hydrographs.HydrographSCSPlugin;
import com.geomaticaeambiente.klemgui.utils.CommonHydrographData;
import com.geomaticaeambiente.klemgui.utils.PluginUtils;

/**
 *
 * @author Geomatica
 */
public class CommonHydroPanel extends javax.swing.JPanel {

    /**
     * Creates new form CommonHydroPanel
     * 
     * @param commondata
     */
    public CommonHydroPanel(CommonHydrographData commondata) {
        initComponents();
        commonHydroData = commondata;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed"
    // desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        GridBagConstraints gridBagConstraints;

        jLabel_Hyetograph = new javax.swing.JLabel();
        jTextField_HyetoFile = new javax.swing.JTextField();
        jButton_Chooser = new javax.swing.JButton();
        jLabel_Duration = new javax.swing.JLabel();
        jTextField_Duration = new javax.swing.JTextField();
        jLabel_BasinArea = new javax.swing.JLabel();
        jTextField_BasinArea = new javax.swing.JTextField();
        jLabel_FlowFraction = new javax.swing.JLabel();
        jTextField_FlowFraction = new javax.swing.JTextField();
        jLabel_Cn = new javax.swing.JLabel();
        jTextField_CN = new javax.swing.JTextField();
        jLabel_FlowCoeff = new javax.swing.JLabel();
        jTextField_FlowCoeff = new javax.swing.JTextField();
        jLabel_DeepFlow = new javax.swing.JLabel();
        jTextField_DeepFlow = new javax.swing.JTextField();

        setLayout(new java.awt.GridBagLayout());

        final java.util.ResourceBundle bundle = java.util.ResourceBundle
                .getBundle("com/geomaticaeambiente/klemgui/resources/Bundle"); // NOI18N
        jLabel_Hyetograph.setText(bundle
                .getString("CommonHydroPanel.jLabel_Hyetograph.text")); // NOI18N
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 38;
        gridBagConstraints.anchor = GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new Insets(12, 10, 0, 0);
        add(jLabel_Hyetograph, gridBagConstraints);
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 183;
        gridBagConstraints.anchor = GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.7;
        gridBagConstraints.insets = new Insets(9, 4, 0, 0);
        add(jTextField_HyetoFile, gridBagConstraints);

        jButton_Chooser
                .setIcon(new javax.swing.ImageIcon(
                        getClass()
                                .getResource(
                                    "/com/geomaticaeambiente/klemgui/images/folder-horizontal-open_16.png"))); // NOI18N
        jButton_Chooser.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent evt) {
                jButton_ChooserActionPerformed(evt);
            }
        });
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new Insets(7, 6, 0, 10);
        add(jButton_Chooser, gridBagConstraints);

        jLabel_Duration.setText(bundle
                .getString("CommonHydroPanel.jLabel_Duration.text")); // NOI18N
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 37;
        gridBagConstraints.anchor = GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new Insets(9, 10, 0, 0);
        add(jLabel_Duration, gridBagConstraints);

        jTextField_Duration.setEnabled(false);
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 238;
        gridBagConstraints.anchor = GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.7;
        gridBagConstraints.insets = new Insets(6, 4, 0, 10);
        add(jTextField_Duration, gridBagConstraints);

        jLabel_BasinArea.setText(bundle
                .getString("CommonHydroPanel.jLabel_BasinArea.text")); // NOI18N
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 15;
        gridBagConstraints.anchor = GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new Insets(9, 10, 0, 0);
        add(jLabel_BasinArea, gridBagConstraints);
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 238;
        gridBagConstraints.anchor = GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.7;
        gridBagConstraints.insets = new Insets(6, 4, 0, 10);
        add(jTextField_BasinArea, gridBagConstraints);

        jLabel_FlowFraction.setText(bundle
                .getString("CommonHydroPanel.jLabel_FlowFraction.text")); // NOI18N
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new Insets(9, 10, 0, 0);
        add(jLabel_FlowFraction, gridBagConstraints);
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 238;
        gridBagConstraints.anchor = GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.7;
        gridBagConstraints.insets = new Insets(6, 4, 0, 10);
        add(jTextField_FlowFraction, gridBagConstraints);

        jLabel_Cn.setText(bundle.getString("CommonHydroPanel.jLabel_Cn.text")); // NOI18N
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.ipadx = 27;
        gridBagConstraints.anchor = GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new Insets(9, 10, 0, 0);
        add(jLabel_Cn, gridBagConstraints);
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 238;
        gridBagConstraints.anchor = GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.7;
        gridBagConstraints.insets = new Insets(6, 4, 0, 10);
        add(jTextField_CN, gridBagConstraints);

        jLabel_FlowCoeff.setText(bundle
                .getString("CommonHydroPanel.jLabel_FlowCoeff.text")); // NOI18N
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.ipadx = 41;
        gridBagConstraints.anchor = GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new Insets(9, 10, 0, 0);
        add(jLabel_FlowCoeff, gridBagConstraints);
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 238;
        gridBagConstraints.anchor = GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.7;
        gridBagConstraints.insets = new Insets(6, 4, 0, 10);
        add(jTextField_FlowCoeff, gridBagConstraints);

        jLabel_DeepFlow.setText(bundle
                .getString("CommonHydroPanel.jLabel_DeepFlow.text")); // NOI18N
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.ipadx = 15;
        gridBagConstraints.anchor = GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new Insets(9, 10, 0, 0);
        add(jLabel_DeepFlow, gridBagConstraints);
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 238;
        gridBagConstraints.anchor = GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.7;
        gridBagConstraints.insets = new Insets(6, 4, 11, 10);
        add(jTextField_DeepFlow, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_ChooserActionPerformed(ActionEvent evt) {// GEN-FIRST:event_jButton_ChooserActionPerformed

        final FileNameExtensionFilter filter = new FileNameExtensionFilter(
                "Hyetograph", new String[] { "txt", "csv" });
        final File hyeto = PluginUtils.openJChooserDialog(null,
                JFileChooser.FILES_ONLY, JFileChooser.OPEN_DIALOG, filter,
                null, false)[0];

        if (hyeto != null) {
            jTextField_HyetoFile.setText(hyeto.getAbsolutePath());
            try {
                commonHydroData.setHyetograph(hyeto);

            } catch (final Exception ex) {
                Logger.getLogger(HydrographSCSPlugin.class.getName()).log(
                        Level.SEVERE, null, ex);
            }

            // set duration text
            final double durationValue = commonHydroData.getHyetograph()
                    .getStep().getInterval(TimeInterval.TimeIntervalUnit.HOUR)
                    * commonHydroData.getHyetograph().getRainfall().length;
            jTextField_Duration.setText(PluginUtils
                    .getThreeDecimalFormatToString(durationValue));
        }

    }// GEN-LAST:event_jButton_ChooserActionPerformed

    public CommonHydrographData getPersonalCommonHydrographData()
            throws NumberFormatException, Exception {

        commonHydroData.setDuration(Double.parseDouble(jTextField_Duration
                .getText()));
        commonHydroData.setBasinArea(Double.parseDouble(jTextField_BasinArea
                .getText()));
        commonHydroData.setFlowFraction(Double
                .parseDouble(jTextField_FlowFraction.getText()));
        commonHydroData.setCn(Double.parseDouble(jTextField_CN.getText()));
        commonHydroData.setFlowCoeff(Double.parseDouble(jTextField_FlowCoeff
                .getText()));
        commonHydroData.setDeepFlow(Double.parseDouble(jTextField_DeepFlow
                .getText()));

        return commonHydroData;

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_Chooser;
    private javax.swing.JLabel jLabel_BasinArea;
    private javax.swing.JLabel jLabel_Cn;
    private javax.swing.JLabel jLabel_DeepFlow;
    private javax.swing.JLabel jLabel_Duration;
    private javax.swing.JLabel jLabel_FlowCoeff;
    private javax.swing.JLabel jLabel_FlowFraction;
    private javax.swing.JLabel jLabel_Hyetograph;
    private javax.swing.JTextField jTextField_BasinArea;
    private javax.swing.JTextField jTextField_CN;
    private javax.swing.JTextField jTextField_DeepFlow;
    private javax.swing.JTextField jTextField_Duration;
    private javax.swing.JTextField jTextField_FlowCoeff;
    private javax.swing.JTextField jTextField_FlowFraction;
    private javax.swing.JTextField jTextField_HyetoFile;
    // End of variables declaration//GEN-END:variables

    private final CommonHydrographData commonHydroData;

}
